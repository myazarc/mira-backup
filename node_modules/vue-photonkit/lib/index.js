/*!
  * Vue Photonkit version 1.2.3
  * under MIT License copyright 2017 kaorun343
  */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Button = {
  name: 'PhotonkitButton',
  props: {
    type: String,
    size: String,
    active: Boolean
  },
  computed: {
    classes: function classes () {
      var size = "btn-" + (this.size || '');
      var type = "btn-" + (this.type ? this.type : 'default');
      return [size, type, { active: this.active }]
    }
  },
  render: function render (h) {
    return h('button', {
      staticClass: 'btn',
      class: this.classes
    }, this.$slots.default)
  },
  template: "<button class=\"btn\" :class=\"classes\"><slot></slot></button>"
};

var ButtonGroup = {
  name: 'PhotonkitButtonGroup',
  render: function render (h) {
    return h('div', { staticClass: 'btn-group' }, this.$slots.default)
  },
  template: "<div class=\"btn-group\"><slot></slot></div>"
};

var Icon = {
  name: 'PhotonkitIcon',
  props: {
    icon: String,
    text: Boolean
  },
  computed: {
    classes: function classes () {
      return [("icon-" + (this.icon)), { 'icon-text': this.text }]
    }
  },
  render: function render (h) {
    return h('span', {
      staticClass: 'icon',
      class: this.classes
    }, this.$slots.default)
  },
  template: "<span class=\"icon\" :class=\"classes\"><slot></slot></span>"
};

var ListGroup = {
  name: 'PhotonkitListGroup',
  render: function render (h) {
    return h('ul', { staticClass: 'list-group' }, this.$slots.default)
  },
  template: "<ul class=\"list-group\"><slot></slot></ul>"
};

var ListGroupHeader = {
  name: 'PhotonkitGroupHeader',
  render: function render (h) {
    return h('li', { staticClass: 'list-group-header' }, this.$slots.default)
  },
  template: "<li class=\"list-group-header\"><slot></slot></li>"
};

var template = "<li class=\"img-group-item\" :class=\"classes\"><img v-if=\"src\" class=\"img-circle media-object pull-left\" :src=\"src\" width=\"32px\" height=\"32px\"><div class=\"media-body\"><slot></slot></div></li>";

var ListGroupItem = {
  name: 'PhotonkitGroupItem',
  props: {
    src: String,
    active: Boolean
  },
  computed: {
    classes: function classes () {
      return { active: this.active }
    }
  },
  render: function render (h) {
    var data = {
      staticClass: 'list-group-item',
      class: this.classes
    };
    return h('li', data, [

      this.src ? h('img', {
        staticClass: 'img-circle media-object pull-left',
        attrs: { src: this.src, width: '32px', height: '32px' }
      }) : h(),

      h('div', { staticClass: 'media-body' }, this.$slots.default)
    ])
  },
  template: template
};

var template$1 = "<nav class=\"nav-group\"><h5 class=\"nav-group-title\">{{ title }}</h5><slot></slot></nav>";

var NavGroup = {
  name: 'PhotonkitNavGroup',
  props: {
    title: String
  },
  render: function render (h) {
    return h('nav', { staticClass: 'nav-group' }, [
      this.title ? h('h5', { staticClass: 'nav-group-title' }, this.title) : h(),
      this.$slots.default
    ])
  },
  template: template$1
};

var NavGroupItem = {
  name: 'PhotonkitNavGroupItem',
  props: {
    active: Boolean
  },
  computed: {
    classes: function classes () {
      return { active: this.active }
    }
  },
  render: function render (h) {
    return h('span', {
      staticClass: 'nav-group-item',
      class: this.classes
    }, this.$slots.default)
  },
  template: "<span class=\"nav-group-item\" :class=\"classes\"><slot></slot></span>"
};

var Pane = {
  name: 'PhotonkitPane',
  props: {
    size: String,
    sidebar: Boolean
  },
  computed: {
    classes: function classes () {
      return [
        this.size ? ("pane-" + (this.size)) : 'pane',
        { sidebar: this.sidebar }
      ]
    }
  },
  render: function render (h) {
    return h('div', { class: this.classes }, this.$slots.default)
  },
  template: "<div :class=\"classes\"><slot></slot></div>"
};

var PaneGroup = {
  name: 'PhotonkitPaneGroup',
  render: function render (h) {
    return h('div', { staticClass: 'pane-group' }, this.$slots.default)
  },
  template: "<div class=\"pane-group\"><slot></slot></div>"
};

var TabGroup = {
  name: 'PhotonkitTabGroup',
  render: function render (h) {
    return h('div', { staticClass: 'tab-group' }, this.$slots.default)
  },
  template: "<div class=\"tab-group\"><slot></slot></div>"
};

var template$2 = "<div class=\"tab-item\" :class=\"tabItemClasses\"><icon :class=\"iconClasses\" :icon=\"icon || 'cancel'\" @click.native=\"cancel\"></icon><slot></slot></div>";

var TabItem = {
  name: 'PhotonkitTabItem',
  components: { Icon: Icon },
  props: {
    active: Boolean,
    fixed: Boolean,
    icon: String
  },
  computed: {
    tabItemClasses: function tabItemClasses () {
      return { active: this.active, 'tab-item-fixed': this.fixed }
    },
    iconClasses: function iconClasses () {
      return { 'icon-close-tab': !this.icon }
    }
  },
  render: function render (h) {
    var icon = h('icon', {
      class: this.iconClasses,
      props: { icon: this.icon || 'cancel' },
      nativeOn: { click: this.cancel }
    });

    return h('div', {
      class: this.tabItemClasses,
      staticClass: 'tab-item'
    }, [icon, this.$slots.default])
  },
  methods: {
    cancel: function cancel (e) {
      e.stopPropagation();
      this.$emit('cancel');
    }
  },
  template: template$2
};

var template$3 = "<div class=\"toolbar\" :class=\"classes\"><h1 class=\"title\">{{ title }}</h1><slot></slot></div>";

var Toolbar = {
  name: 'PhotonkitToolbar',
  props: {
    type: String,
    title: String
  },
  computed: {
    classes: function classes () {
      return [
        ("toolbar-" + (this.type))
      ]
    }
  },
  render: function render (h) {
    var data = { staticClass: 'toolbar', class: this.classes };
    var title = h('h1', { staticClass: 'title' }, this.title);

    return h(this.type, data, [title, this.$slots.default])
  },
  template: template$3
};

var ToolbarActions = {
  name: 'PhotonkitToolbarActions',
  render: function render (h) {
    return h('div', { staticClass: 'toolbar-actions' }, this.$slots.default)
  },
  template: "<div class=\"toolbar-actions\"><slot></slot></div>"
};

var PhotonkitWindow = {
  name: 'PhotonkitWindow',
  render: function render (h) {
    return h('div', { staticClass: 'window' }, this.$slots.default)
  },
  template: "<div class=\"window\"><slot></slot></div>"
};

var WindowContent = {
  name: 'PhotonkitWindowContent',
  render: function render (h) {
    return h('div', { staticClass: 'window-content' }, this.$slots.default)
  },
  template: "<div class=\"window-content\"><slot></slot></div>"
};

function install (Vue) {
  Vue.component('ph-button', Button);
  Vue.component('ph-button-group', ButtonGroup);
  Vue.component('ph-icon', Icon);
  Vue.component('ph-list-group', ListGroup);
  Vue.component('ph-list-group-header', ListGroupHeader);
  Vue.component('ph-list-group-item', ListGroupItem);
  Vue.component('ph-nav-group', NavGroup);
  Vue.component('ph-nav-group-item', NavGroupItem);
  Vue.component('ph-pane', Pane);
  Vue.component('ph-pane-group', PaneGroup);
  Vue.component('ph-tab-group', TabGroup);
  Vue.component('ph-tab-item', TabItem);
  Vue.component('ph-toolbar', Toolbar);
  Vue.component('ph-toolbar-actions', ToolbarActions);
  Vue.component('ph-window', PhotonkitWindow);
  Vue.component('ph-window-content', WindowContent);
}

exports.Button = Button;
exports.ButtonGroup = ButtonGroup;
exports.Icon = Icon;
exports.ListGroup = ListGroup;
exports.ListGroupHeader = ListGroupHeader;
exports.ListGroupItem = ListGroupItem;
exports.NavGroup = NavGroup;
exports.NavGroupItem = NavGroupItem;
exports.Pane = Pane;
exports.PaneGroup = PaneGroup;
exports.TabGroup = TabGroup;
exports.TabItem = TabItem;
exports.Toolbar = Toolbar;
exports.ToolbarActions = ToolbarActions;
exports.Window = PhotonkitWindow;
exports.WindowContent = WindowContent;
exports['default'] = install;
